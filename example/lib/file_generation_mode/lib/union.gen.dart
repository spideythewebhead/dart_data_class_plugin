// AUTO GENERATED - DO NOT MODIFY

part of 'union.dart';

extension $GetUserResult on GetUserResult {
  R when<R>({
    required R Function(_GetUserResultData value) data,
    required R Function(_GetUserResultError value) error,
  }) {
    if (this is _GetUserResultData) {
      return data(this as _GetUserResultData);
    }
    if (this is _GetUserResultError) {
      return error(this as _GetUserResultError);
    }
    throw UnimplementedError('$runtimeType is not generated by this plugin');
  }

  R maybeWhen<R>({
    R Function(_GetUserResultData value)? data,
    R Function(_GetUserResultError value)? error,
    required R Function() orElse,
  }) {
    if (data != null && this is _GetUserResultData) {
      return data(this as _GetUserResultData);
    }
    if (error != null && this is _GetUserResultError) {
      return error(this as _GetUserResultError);
    }
    return orElse();
  }
}

GetUserResult _$GetUserResultFromJson(Map<dynamic, dynamic> json) {
  switch (json['code']) {
    case 'ok':
      return _GetUserResultData.fromJson(json);
    default:
      return _GetUserResultError.fromJson(json);
  }
}

class _GetUserResultData extends GetUserResult {
  _GetUserResultData({
    required this.user,
  }) : super._();

  final User user;

  factory _GetUserResultData.fromJson(Map<dynamic, dynamic> json) {
    return _GetUserResultData(
      user: User.fromJson(json['user']),
    );
  }

  @override
  int get hashCode {
    return Object.hashAll(<Object?>[
      runtimeType,
      user,
    ]);
  }

  @override
  bool operator ==(Object? other) {
    return identical(this, other) ||
        other is _GetUserResultData && runtimeType == other.runtimeType && user == other.user;
  }

  @override
  String toString() {
    String toStringOutput = '_GetUserResultData{<optimized out>}';
    assert(() {
      toStringOutput = '_GetUserResultData@<$hexIdentity>{user: $user}';
      return true;
    }());
    return toStringOutput;
  }
}

class _GetUserResultError extends GetUserResult {
  _GetUserResultError({
    this.exception,
    this.message,
  }) : super._();

  final Exception? exception;

  final String? message;

  factory _GetUserResultError.fromJson(Map<dynamic, dynamic> json) {
    return _GetUserResultError(
      exception: json['exception'] == null
          ? null
          : jsonConverterRegistrant.find(Exception).fromJson(json['exception']) as Exception,
      message: json['message'] == null ? null : json['message'] as String,
    );
  }

  @override
  int get hashCode {
    return Object.hashAll(<Object?>[
      runtimeType,
      exception,
      message,
    ]);
  }

  @override
  bool operator ==(Object? other) {
    return identical(this, other) ||
        other is _GetUserResultError &&
            runtimeType == other.runtimeType &&
            exception == other.exception &&
            message == other.message;
  }

  @override
  String toString() {
    String toStringOutput = '_GetUserResultError{<optimized out>}';
    assert(() {
      toStringOutput =
          '_GetUserResultError@<$hexIdentity>{exception: $exception, message: $message}';
      return true;
    }());
    return toStringOutput;
  }
}
