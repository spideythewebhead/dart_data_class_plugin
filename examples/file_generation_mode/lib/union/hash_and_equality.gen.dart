// AUTO GENERATED - DO NOT MODIFY
// ignore_for_file: type=lint
// ignore_for_file: subtype_of_sealed_class, invalid_use_of_internal_member, invalid_use_of_visible_for_testing_member, inference_failure_on_uninitialized_variable, inference_failure_on_function_return_type, inference_failure_on_untyped_parameter, deprecated_member_use_from_same_package
// coverage:ignore-file

part of 'hash_and_equality.dart';

extension $AsyncResult on AsyncResult {
  R when<R>({
    required R Function(AsyncResultData value) data,
    required R Function(AsyncResultListData value) listData,
  }) {
    if (this is AsyncResultData) {
      return data(this as AsyncResultData);
    }
    if (this is AsyncResultListData) {
      return listData(this as AsyncResultListData);
    }
    throw UnimplementedError('$runtimeType is not generated by this plugin');
  }

  R maybeWhen<R>({
    R Function(AsyncResultData value)? data,
    R Function(AsyncResultListData value)? listData,
    required R Function() orElse,
  }) {
    if (data != null && this is AsyncResultData) {
      return data(this as AsyncResultData);
    }
    if (listData != null && this is AsyncResultListData) {
      return listData(this as AsyncResultListData);
    }
    return orElse();
  }
}

class AsyncResultData extends AsyncResult {
  AsyncResultData(
    this.data,
  ) : super._();

  final int data;

  @override
  int get hashCode {
    return Object.hashAll(<Object?>[
      runtimeType,
      data,
    ]);
  }

  @override
  bool operator ==(Object? other) {
    return identical(this, other) ||
        other is AsyncResultData && runtimeType == other.runtimeType && data == other.data;
  }

  @override
  String toString() {
    String toStringOutput = 'AsyncResultData{<optimized out>}';
    assert(() {
      toStringOutput = 'AsyncResultData@<$hexIdentity>{data: $data}';
      return true;
    }());
    return toStringOutput;
  }
}

class AsyncResultListData extends AsyncResult {
  AsyncResultListData(
    List<int> data,
  )   : _data = data,
        super._();

  List<int> get data => List<int>.unmodifiable(_data);
  final List<int> _data;

  @override
  int get hashCode {
    return Object.hashAll(<Object?>[
      runtimeType,
    ]);
  }

  @override
  bool operator ==(Object? other) {
    return identical(this, other) ||
        other is AsyncResultListData &&
            runtimeType == other.runtimeType &&
            deepEquality(data, other.data);
  }

  @override
  String toString() {
    String toStringOutput = 'AsyncResultListData{<optimized out>}';
    assert(() {
      toStringOutput = 'AsyncResultListData@<$hexIdentity>{data: $data}';
      return true;
    }());
    return toStringOutput;
  }
}
