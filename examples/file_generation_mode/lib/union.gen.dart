// AUTO GENERATED - DO NOT MODIFY

// ignore_for_file: library_private_types_in_public_api, unused_element, unused_field

part of 'union.dart';

extension $GetUserResult on GetUserResult {
  R when<R>({
    required R Function(GetUserResultData value) data,
    required R Function(GetUserResultError value) error,
  }) {
    if (this is GetUserResultData) {
      return data(this as GetUserResultData);
    }
    if (this is GetUserResultError) {
      return error(this as GetUserResultError);
    }
    throw UnimplementedError('$runtimeType is not generated by this plugin');
  }

  R maybeWhen<R>({
    R Function(GetUserResultData value)? data,
    R Function(GetUserResultError value)? error,
    required R Function() orElse,
  }) {
    if (data != null && this is GetUserResultData) {
      return data(this as GetUserResultData);
    }
    if (error != null && this is GetUserResultError) {
      return error(this as GetUserResultError);
    }
    return orElse();
  }
}

GetUserResult _$GetUserResultFromJson(Map<dynamic, dynamic> json) {
  switch (json['code']) {
    case 'ok':
      return GetUserResultData.fromJson(json);
    default:
      return GetUserResultError.fromJson(json);
  }
}

class GetUserResultData extends GetUserResult {
  GetUserResultData({
    required this.user,
  }) : super._();

  final User user;

  factory GetUserResultData.fromJson(Map<dynamic, dynamic> json) {
    return GetUserResultData(
      user: User.fromJson(json['user']),
    );
  }

  @override
  int get hashCode {
    return Object.hashAll(<Object?>[
      runtimeType,
      user,
    ]);
  }

  @override
  bool operator ==(Object? other) {
    return identical(this, other) ||
        other is GetUserResultData && runtimeType == other.runtimeType && user == other.user;
  }

  @override
  String toString() {
    String toStringOutput = 'GetUserResultData{<optimized out>}';
    assert(() {
      toStringOutput = 'GetUserResultData@<$hexIdentity>{user: $user}';
      return true;
    }());
    return toStringOutput;
  }
}

class _$GetUserResultDataCopyWithProxy {
  _$GetUserResultDataCopyWithProxy(this._value);

  final GetUserResultData _value;

  @pragma('vm:prefer-inline')
  $UserCopyWithProxyChain<GetUserResultData> get user =>
      $UserCopyWithProxyChain<GetUserResultData>(_value.user, (User update) => this(user: update));

  @pragma('vm:prefer-inline')
  GetUserResultData call({
    final User? user,
  }) {
    return GetUserResultData(
      user: user ?? _value.user,
    );
  }
}

class $GetUserResultDataCopyWithProxyChain<$Result> {
  $GetUserResultDataCopyWithProxyChain(this._value, this._chain);

  final GetUserResultData _value;
  final $Result Function(GetUserResultData update) _chain;

  @pragma('vm:prefer-inline')
  $Result user(User newValue) => this(user: newValue);

  @pragma('vm:prefer-inline')
  $Result call({
    final User? user,
  }) {
    return _chain(GetUserResultData(
      user: user ?? _value.user,
    ));
  }
}

extension $GetUserResultDataExtension on GetUserResultData {
  _$GetUserResultDataCopyWithProxy get copyWith => _$GetUserResultDataCopyWithProxy(this);
}

class GetUserResultError extends GetUserResult {
  GetUserResultError({
    required this.statusCode,
    this.message,
  }) : super._();

  final int statusCode;

  final String? message;

  factory GetUserResultError.fromJson(Map<dynamic, dynamic> json) {
    return GetUserResultError(
      statusCode: json['statusCode'] as int,
      message: json['message'] as String?,
    );
  }

  @override
  int get hashCode {
    return Object.hashAll(<Object?>[
      runtimeType,
      statusCode,
      message,
    ]);
  }

  @override
  bool operator ==(Object? other) {
    return identical(this, other) ||
        other is GetUserResultError &&
            runtimeType == other.runtimeType &&
            statusCode == other.statusCode &&
            message == other.message;
  }

  @override
  String toString() {
    String toStringOutput = 'GetUserResultError{<optimized out>}';
    assert(() {
      toStringOutput =
          'GetUserResultError@<$hexIdentity>{statusCode: $statusCode, message: $message}';
      return true;
    }());
    return toStringOutput;
  }
}

class _$GetUserResultErrorCopyWithProxy {
  _$GetUserResultErrorCopyWithProxy(this._value);

  final GetUserResultError _value;

  @pragma('vm:prefer-inline')
  GetUserResultError statusCode(int newValue) => this(statusCode: newValue);

  @pragma('vm:prefer-inline')
  GetUserResultError message(String? newValue) => this(message: newValue);

  @pragma('vm:prefer-inline')
  GetUserResultError call({
    final int? statusCode,
    final Object? message = const Object(),
  }) {
    return GetUserResultError(
      statusCode: statusCode ?? _value.statusCode,
      message: identical(message, const Object()) ? _value.message : (message as String?),
    );
  }
}

class $GetUserResultErrorCopyWithProxyChain<$Result> {
  $GetUserResultErrorCopyWithProxyChain(this._value, this._chain);

  final GetUserResultError _value;
  final $Result Function(GetUserResultError update) _chain;

  @pragma('vm:prefer-inline')
  $Result statusCode(int newValue) => this(statusCode: newValue);

  @pragma('vm:prefer-inline')
  $Result message(String? newValue) => this(message: newValue);

  @pragma('vm:prefer-inline')
  $Result call({
    final int? statusCode,
    final Object? message = const Object(),
  }) {
    return _chain(GetUserResultError(
      statusCode: statusCode ?? _value.statusCode,
      message: identical(message, const Object()) ? _value.message : (message as String?),
    ));
  }
}

extension $GetUserResultErrorExtension on GetUserResultError {
  _$GetUserResultErrorCopyWithProxy get copyWith => _$GetUserResultErrorCopyWithProxy(this);
}
